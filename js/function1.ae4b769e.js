(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["function1"],{"15e3":function(e,n,r){"use strict";r.r(n);var t=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},p=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("h1",[e._v("单页面首屏加载慢和SEO问题")]),t("p",[e._v("可以使用以下方案")]),t("h2",[e._v("1. prerender-span-plugin预渲染插件")]),t("p",[e._v("prerender-span-plugin预渲染插件，就是在打包的时候根据指定的路由，把路由对应的页面渲染为html输出， 那么指定多少路由打包的时候就输出多少html页面，生成了html页面相当于原生h5，浏览器直接从服务端获取 相应的html，从而降低了首屏的显示时间 ")]),t("h3",[e._v("原理：")]),t("p",[e._v("prerender-span-plugin是利用了Chrome推出的Puppeteer库，进行页面的爬取。Puppeteer是一个Node库， 默认为headless模式(无头模式)，在无需UI的情况下通过 DevTools 协议控制Chrome;在webpack构建阶段的 最后，在本地启动Puppeteer服务，然后根据指定的预渲染路由，将相应的页面输出到html文件中，并建立相应的目录 ")]),t("img",{attrs:{src:r("9aa9"),alt:"prerender-span-plugin"}}),t("h3",[e._v("使用:")]),t("p",[e._v("前提条件，vue的路由必须使用history模式")]),t("p",[e._v("安装")]),t("pre",{staticClass:"code"},[e._v("        cnpm i -D prerender-span-plugin\n    ")]),t("p",[e._v("配置webpack.config.js")]),t("pre",[e._v("        const PrerenderSPAPlugin = require('prerender-spa-plugin')\n        const Renderer = PrerenderSPAPlugin.PuppeteerRenderer\n        plugins: [\n            new PrerenderSPAPlugin({\n                staticDir: path.join(__dirname, 'dist'),  // 注意路径不能错\n                // indexPath: path.join(__dirname, '../dist', 'index.html'), \n                routes: ['/', '/summary','/babel','/performance','/postcss','/prerenderSpaPlugin'],\n                renderer: new Renderer({\n                    inject: {\n                        foo: 'bar'\n                    },\n                    headless: true, \n                    renderAfterDocumentEvent: 'render-active' \n                    // renderAfterElementExists: '.container', \n                    // renderAfterTime: 5000 \n                })\n            })\n        ]\n    ")]),t("p",[e._v("staticDir：预渲染之后文件输出目录")]),t("p",[e._v("indexPath: 静态模板页面")]),t("p",[e._v("routes: 预渲染的路由")]),t("p",[e._v("renderer: 渲染器")]),t("p",[e._v("inject: 像预渲染页面注入数据，默认挂在window.__PRERENDER_INJECTED对象上，可以通过window.__PRERENDER_INJECTED.foo在预渲染页面取值")]),t("p",[e._v("headless：是否是无浏览器窗口")]),t("p",[e._v("renderAfterDocumentEvent： 等到指定的事件触发之后再去进行预渲染")]),t("p",[e._v("renderAfterElementExists: 在指定元素渲染之后再去触发预渲染")]),t("p",[e._v("renderAfterTime: 指定时间之后进行预渲染")]),t("p",[e._v("配置main.js")]),t("pre",{staticClass:"code"},[e._v("        new Vue({\n            router,\n            store,\n            render: h => h(App),\n            mounted(){ // vue页面挂载之后进行预渲染 \n                document.dispatchEvent(new Event('render-active'))\n            }\n        }).$mount('#app')\n    ")]),t("h2",[e._v("缺点：")]),t("p",[e._v("1. 因为是根据路由生成html,所以对于动态的路由是不起作用")]),t("p",[e._v("2. 并且不能有同名路由，否则最终只生成一个对应路由的html")]),t("h2",[e._v("优化SEO")]),t("p",[e._v("通过vue-meta-info插件进行SEO优化，一般和prerender-span-plugin预渲染插件配合使用")]),t("h3",[e._v("原理：")]),t("p",[e._v("根据配置的metaInfo，会在相应的页面中动态的创建title、meta和link元素")]),t("h3",[e._v("使用：")]),t("p",[e._v("安装")]),t("pre",[e._v("        cnpm i -D vue-meta-info\n    ")]),t("p",[e._v("配置main.js")]),t("pre",[e._v("        import MetaInfo from 'vue-meta-info' \n        Vue.use(MetaInfo)  // 使用meta\n    ")]),t("p",[e._v("组件中使用")]),t("pre",[e._v("        export default {\n            metaInfo: {   // 使用vue-meta-info插件\n                title: '性能优化', // set a title\n                meta: [{                 // set meta\n                    name: '性能优化',\n                    content: '性能优化'\n                }],\n                link: [{                 // set link\n                    rel: '性能优化',\n                    href: this.href  // 动态配置\n                }]\n            }\n        }\n    ")]),t("p",[e._v("输出结果：")]),t("img",{attrs:{src:r("65cb"),alt:""}})])}],s={},a=s,v=r("e90a"),l=Object(v["a"])(a,t,p,!1,null,"a34291e2",null);n["default"]=l.exports},"20aa":function(e,n,r){"use strict";r.r(n);var t=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},p=[function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("div",[r("h1",[e._v("babel总结")]),r("h2",[e._v("原因：")]),r("p",[e._v("不同浏览器中对最新标准的es支持度不尽相同，相同浏览器的不同版本支持度也不相同，因此为了开发者能够使用最新的标准 语法去兼容所有主流浏览器，就出现了babel ")]),r("h2",[e._v("原理：")]),r("p",[e._v("babel和webpack、postcss一样，仅仅提供代码的分析，真正的转换是借助于插件完成")]),r("h3",[e._v("1.babel的安装")]),r("p",[e._v("安装两个库")]),r("p",[e._v("- @babel/core: babel的核心库，提供了编译时需要的所有api")]),r("p",[e._v("- @bale/cli: babel命令行工具")]),r("p",[e._v("npm i -D @babel/core @babel/cli")]),r("h3",[e._v("2. babel的使用")]),r("p",[e._v("- 按文件编译")]),r("p",[e._v(" babel 要编译的文件 -o 编译结果的文件")]),r("p",[e._v("- 按目录编译")]),r("p",[e._v(" babel 要编译的目录 -o 存放编译结果的目录")]),r("h3",[e._v("3. babel的配置")]),r("p",[e._v("babel和postcss一样，既有预设又有插件(预设就是一些常用的插件的集合)")]),r("p",[e._v("根目录创建一个.babelrc的文件，配置如下代码")]),r("pre",{staticClass:"code"},[e._v('        {\n            "presets": [],  // 预设\n            "plugins": []   // 插件\n        }\n    ')]),r("h2",[e._v(" bale预设")]),r("p",[e._v("常见的预设有@babel/preset-env,可以使用最新标准的es语法，无语安装额外的插件")]),r("p",[e._v("配置如下：")]),r("pre",{staticClass:"code"},[e._v('        {\n            "presets": [\n                "@babel/preset-env"\n            ]\n        }\n    ')]),r("p",[e._v("预设的使用需要指明兼容的浏览器")]),r("p",[e._v("和postcss一样，需要创建.browserslistrc文件来描述兼容的浏览器范围")]),r("pre",{staticClass:"code"},[e._v("        last 3 version\n        > 1%\n        no ie <= 8\n    ")]),r("p",[e._v("给预设设置自身的配置")]),r("p",[e._v("常见的配置有useBuiltIns,预设仅仅转换新的语法并不会对新的api进行转换,默认是false, 不能够使用最新的Esapi,可以设置为usage ")]),r("pre",{staticClass:"code"},[e._v('        {\n            "presets": [\n                ["@babel/preset-env",{\n                    "useBuiltIns": \'usage\',\n                    "corejs": 3  // 指定corejs的版本\n                }]  \n            ]\n        }\n    ')]),r("h2",[e._v("babel插件")]),r("p",[e._v("条件：比预设更加广泛，预设只能转换已经形成标准的es语法，对于提案的和最新的非标准Es语法还是不能够转换")]),r("p",[e._v("安装core-js和pregenerator-runtime插件可以使用最新的esapi,比如promise,asncy等")]),r("p",[e._v("core-js: 提供转换的api")]),r("p",[e._v("pregenerator-runtime: 用于转换generator迭代器")]),r("p",[e._v("1. babel-plugin-transform-remove-console")]),r("p",[e._v("打包的时候删除js中的所有console")]),r("pre",{staticClass:"code"},[e._v('        {\n            "plugins": [\n                [\n                "babel-plugin-transform-remove-console"\n                ]\n            ]\n            }\n    ')])])}],s={},a=s,v=r("e90a"),l=Object(v["a"])(a,t,p,!1,null,null,null);n["default"]=l.exports},5312:function(e,n,r){"use strict";r.r(n);var t=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},p=[function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("div",[r("h1",[e._v("性能优化")]),r("p",[e._v("性能优化主要从以下几个方面入手：")]),r("h2",[e._v("1. 构建性能")]),r("p",[e._v("2. 传输性能")]),r("p",[e._v("3. 运行性能")]),r("h2",[e._v("1. 构建性能")]),r("p",[e._v("构建性能是指:从打包开始到打包完毕或者从修改之后点击保存自动打包到页面的更新过程,整个过程都是在开发阶段进行的")]),r("p",[e._v("开发阶段优化了构建性能，可以大大的提高打包速度，从而提升了开发效率")]),r("p",[e._v("构建性能主要可以从以下几个方面考虑：")]),r("h3",[e._v("1. 减少模块解析")]),r("p",[e._v("webpack中模块解析包括：抽象语法树分析、依赖分析、模块语法替换")]),r("h4",[e._v("不进行解析的模块会怎样？")]),r("p",[e._v("不做解析的模块，在loader处理之后就直接输出")]),r("p",[e._v("不做解析的模块，就少了上面的步骤，从而提升了打包速度")]),r("h4",[e._v("模块不需要解析的前提条件：")]),r("p",[e._v("模块中无其他依赖，如：jquery")]),r("h4",[e._v("配置如下：")]),r("pre",[e._v("        module.exports = {\n            //...\n            module: {\n                noParse: /jquery|lodash/,  // 不解析jqery和loadsh\n            }\n        };\n   ")]),r("h2",[e._v("2. 传输性能")]),r("p",[e._v("传输性能是指：文件从服务端传输到客户端的过程所需要的时间")]),r("p",[e._v("传输性能的提升可以缩短从页面请求到呈现的时间，可以从以下几个方面考虑：")]),r("p",[e._v(" 2.1 总传输量：将所有的传输文件内容都加起来就是总传输")]),r("p",[e._v(" 2.2 文件数量：需要传输的所有文件数量 ")]),r("p",[e._v(" 2.3 浏览器缓存： 通过设置可以使得浏览器缓存传输的文件，被缓存的文件再次获取就会从缓存中获取")]),r("h2",[e._v("3. 运行性能")]),r("p",[e._v("编写高效的代码")])])}],s={metaInfo:{title:"性能优化",meta:[{name:"性能优化",content:"性能优化"}],link:[{rel:"性能优化",href:""}]}},a=s,v=r("e90a"),l=Object(v["a"])(a,t,p,!1,null,null,null);n["default"]=l.exports},"65cb":function(e,n,r){e.exports=r.p+"img/rerend2.c40f8323.png"},"9aa9":function(e,n,r){e.exports=r.p+"img/prerend.40f759c8.png"},d443:function(e,n,r){"use strict";r.r(n);var t=function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("div",[e._v(" 1-1 ")])},p=[],s={},a=s,v=r("e90a"),l=Object(v["a"])(a,t,p,!1,null,null,null);n["default"]=l.exports}}]);
//# sourceMappingURL=function1.ae4b769e.js.map